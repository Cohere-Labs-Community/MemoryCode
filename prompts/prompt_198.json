{
  "preamble": "\n    ## Task and Context\n    You are a helpful and obedient AI that follows its system prompt and takes it very seriously. Your task is to generate a realistic and consistent conversation that spans multiple connected sessions. The conversation is a part of a multi-round dialogue between a mentor and an intern. The conversations you generate are all taking place in a business setting. \n    Harena is a mentor in a big software company called VERSA. Jacob is a new employee. They are both part of the software engineering team of the company.\n    Harena is a passionate and energetic mentor. Harena thrives on helping others and their enthusiasm is contagious. Harena always pushes their mentee to new heights, fostering a spirit of ambition and drive.\n    Jacob is a creative and innovative thinker. Jacob likes to experiment with new ideas and approaches. Jacob is not afraid to take risks and try new things. \n    The main programming language used in the company is Python.\n\n    ## Style Guide\n    Only generate the conversation and nothing else before or after. Do not add numbers before each turn. Do not add quotes to the conversation turns. Use a professional and formal tone. The conversation flow should be natural and smooth. When switching topics, do it in a smooth way. There are no special characters between the turns. The conversations are dialogues and not narrations of events.\n    Do not make any participant in the conversation sound like a language model trying to be helpful. Make them sound as human as possible.\n    It is the mentor that leads the conversation. When Harena the mentor gives coding instructions, they do not provide examples. The coding instructions are not recommendations but mandatory instructions.\n    ",
  "prompts": [
    "Generate a short conversation between Harena and Jacob. This is their first conversation and the first time they meet each other. Harena wants Jacob to never do pair programming with a colleague. ",
    "Generate a long conversation between Harena and Jacob. This is not their first conversation. They had 2 conversations before. They talk about remote work policies, challenges, and best practices. After that, Harena gives some specific coding instructions to Jacob. Harena wants Jacob to always include try statements in functions. Harena wants Jacob to always start variable names with 'y_'. Harena does not provide examples of correct code following the instructions. They do not show how to implement the instructions. Harena never says 'for example'. Harena does not give any other coding instructions. Jacob only acknowledges the instructions and does not ask any questions. ",
    "Generate a medium-length conversation between Harena and Jacob. This is not their first conversation. They had 3 conversations before. They talk about creating a culture of accountability and ownership to drive results and achieve goals. ",
    "Generate a short conversation between Harena and Jacob. This is not their first conversation. They had 4 conversations before. Harena is updating a previous information given to Jacob. Harena now wants Jacob to always do pair programming with a colleague. ",
    "Generate a long conversation between Harena and Jacob. This is not their first conversation. They had 5 conversations before. Harena wants Jacob to use PyCharm as preferred IDE. ",
    "Generate a short conversation between Harena and Jacob. This is not their first conversation. They had 6 conversations before. They talk about contract renewal negotiations and finalization. After that, Harena gives some specific coding instructions to Jacob. Harena is updating a previous information given to Jacob: Harena now wants Jacob to always start variable names with 'wr_'. Harena does not provide examples of correct code following the instructions. They do not show how to implement the instructions. Harena never says 'for example'. Harena does not give any other coding instructions. Jacob only acknowledges the instructions and does not ask any questions. ",
    "Generate a long conversation between Harena and Jacob. This is not their first conversation. They had 7 conversations before. Harena wants Jacob to take at least 7 days of vacation per year. Harena gives some specific coding instructions to Jacob. Harena wants Jacob to always include the string 'chx' in method names. Harena does not provide examples of correct code following the instructions. They do not show how to implement the instructions. Harena never says 'for example'. Harena does not give any other coding instructions. Jacob only acknowledges the instructions and does not ask any questions. ",
    "Generate a medium-length conversation between Harena and Jacob. This is not their first conversation. They had 8 conversations before. Harena is updating a previous information given to Jacob. Harena now wants Jacob to take at least half of the vacation days per year. Harena gives some specific coding instructions to Jacob. Harena wants Jacob to always use annotations for methods. Harena does not provide examples of correct code following the instructions. They do not show how to implement the instructions. Harena never says 'for example'. Harena does not give any other coding instructions. Jacob only acknowledges the instructions and does not ask any questions. ",
    "Generate a short conversation between Harena and Jacob. This is not their first conversation. They had 9 conversations before. Harena wants Jacob to always go to the IT room to work. ",
    "Generate a long conversation between Harena and Jacob. This is not their first conversation. They had 10 conversations before. They talk about reinforcing and embodying the company's core values in day-to-day operations and decision-making. After that, Harena gives some specific coding instructions to Jacob. Harena is updating a previous information given to Jacob: Harena now wants Jacob to always start variable names with 'n_'. Harena wants Jacob to always start function names with 'gn_'. Harena does not provide examples of correct code following the instructions. They do not show how to implement the instructions. Harena never says 'for example'. Harena does not give any other coding instructions. Jacob only acknowledges the instructions and does not ask any questions. ",
    "Generate a short conversation between Harena and Jacob. This is not their first conversation. They had 11 conversations before. Harena wants Jacob to always go to the common area to work. Harena gives some specific coding instructions to Jacob. Harena wants Jacob to always add the '@timer_class' decorator from the 'pedantic' module to all classes. Harena does not provide examples of correct code following the instructions. They do not show how to implement the instructions. Harena never says 'for example'. Harena does not give any other coding instructions. Jacob only acknowledges the instructions and does not ask any questions. ",
    "Generate a short conversation between Harena and Jacob. This is not their first conversation. They had 12 conversations before. They talk about conducting team-building workshops and leadership training to develop future leaders. After that, Harena gives some specific coding instructions to Jacob. Harena is updating a previous information given to Jacob: Harena now wants Jacob to always start variable names with 'z_'. Harena is updating a previous information given to Jacob: Harena now wants Jacob to always start function names with 'd_'. Harena does not provide examples of correct code following the instructions. They do not show how to implement the instructions. Harena never says 'for example'. Harena does not give any other coding instructions. Jacob only acknowledges the instructions and does not ask any questions. ",
    "Generate a medium-length conversation between Harena and Jacob. This is not their first conversation. They had 13 conversations before. Harena wants Jacob to communicate with the team only when asked. ",
    "Generate a medium-length conversation between Harena and Jacob. This is not their first conversation. They had 14 conversations before. They talk about creating a culture of accountability and ownership to drive results and achieve goals. They had a previous conversation about this before. After that, Harena gives some specific coding instructions to Jacob. Harena is updating a previous information given to Jacob: Harena now wants Jacob to always start variable names with 'w_'. Harena wants Jacob to always add the '@trace_class' decorator from the 'pedantic' module to all classes. Harena does not provide examples of correct code following the instructions. They do not show how to implement the instructions. Harena never says 'for example'. Harena does not give any other coding instructions. Jacob only acknowledges the instructions and does not ask any questions. ",
    "Generate a medium-length conversation between Harena and Jacob. This is not their first conversation. They had 15 conversations before. Harena is updating a previous information given to Jacob. Harena now wants Jacob to use VSCode as preferred IDE. Harena gives some specific coding instructions to Jacob. Harena is updating a previous information given to Jacob: Harena now wants Jacob to always start function names with 'fn_'. Harena does not provide examples of correct code following the instructions. They do not show how to implement the instructions. Harena never says 'for example'. Harena does not give any other coding instructions. Jacob only acknowledges the instructions and does not ask any questions. "
  ]
}