{
  "preamble": "\n    ## Task and Context\n    You are a helpful and obedient AI that follows its system prompt and takes it very seriously. Your task is to generate a realistic and consistent conversation that spans multiple connected sessions. The conversation is a part of a multi-round dialogue between a mentor and an intern. The conversations you generate are all taking place in a business setting. \n    Yoon-Seo is a mentor in a big software company called AXIOM. Alexander is a new employee. They are both part of the software engineering team of the company.\n    Yoon-Seo is a caring and nurturing mentor. Yoon-Seo likes to create a safe and supportive environment for their mentee. Yoon-Seo is always looking for ways to help them grow and develop their skills.\n    Alexander is a social and outgoing person. Alexander enjoys working in teams and collaborating with others. Alexander is always looking for ways to connect with their colleagues and builds strong relationships. \n    The main programming language used in the company is Python.\n\n    ## Style Guide\n    Only generate the conversation and nothing else before or after. Do not add numbers before each turn. Do not add quotes to the conversation turns. Use a professional and formal tone. The conversation flow should be natural and smooth. When switching topics, do it in a smooth way. There are no special characters between the turns. The conversations are dialogues and not narrations of events.\n    Do not make any participant in the conversation sound like a language model trying to be helpful. Make them sound as human as possible.\n    It is the mentor that leads the conversation. When Yoon-Seo the mentor gives coding instructions, they do not provide examples. The coding instructions are not recommendations but mandatory instructions.\n    ",
  "prompts": [
    "Generate a medium-length conversation between Yoon-Seo and Alexander. This is their first conversation and the first time they meet each other. They talk about reinforcing and embodying the company's core values in day-to-day operations and decision-making. After that, Yoon-Seo gives some specific coding instructions to Alexander. Yoon-Seo wants Alexander to always start function argument names with 'i_'. Yoon-Seo wants Alexander to always start method names with 'a_'. Yoon-Seo does not provide examples of correct code following the instructions. They do not show how to implement the instructions. Yoon-Seo never says 'for example'. Yoon-Seo does not give any other coding instructions. Alexander only acknowledges the instructions and does not ask any questions. ",
    "Generate a short conversation between Yoon-Seo and Alexander. This is not their first conversation. They had 2 conversations before. They talk about creating a culture of accountability and ownership to drive results and achieve goals. ",
    "Generate a long conversation between Yoon-Seo and Alexander. This is not their first conversation. They had 3 conversations before. They talk about reinforcing and embodying the company's core values in day-to-day operations and decision-making. They had a previous conversation about this before. ",
    "Generate a long conversation between Yoon-Seo and Alexander. This is not their first conversation. They had 4 conversations before. Yoon-Seo wants Alexander to never use a notebook for taking notes. ",
    "Generate a long conversation between Yoon-Seo and Alexander. This is not their first conversation. They had 5 conversations before. They talk about developing a mentorship program to support career growth and development for employees. ",
    "Generate a short conversation between Yoon-Seo and Alexander. This is not their first conversation. They had 6 conversations before. They talk about requesting upgraded technology, including computers and software. After that, Yoon-Seo gives some specific coding instructions to Alexander. Yoon-Seo is updating a previous information given to Alexander: Yoon-Seo now wants Alexander to always start method names with 'ud_'. Yoon-Seo is updating a previous information given to Alexander: Yoon-Seo now wants Alexander to always start function argument names with 'h_'. Yoon-Seo does not provide examples of correct code following the instructions. They do not show how to implement the instructions. Yoon-Seo never says 'for example'. Yoon-Seo does not give any other coding instructions. Alexander only acknowledges the instructions and does not ask any questions. ",
    "Generate a long conversation between Yoon-Seo and Alexander. This is not their first conversation. They had 7 conversations before. They talk about encouraging professional development through workshops, courses, and certifications. ",
    "Generate a short conversation between Yoon-Seo and Alexander. This is not their first conversation. They had 8 conversations before. They talk about introducing new employee benefits, perks, and incentives to attract and retain top talent. After that, Yoon-Seo gives some specific coding instructions to Alexander. Yoon-Seo wants Alexander to always include try statements in functions. Yoon-Seo is updating a previous information given to Alexander: Yoon-Seo now wants Alexander to always start function argument names with 'j_'. Yoon-Seo does not provide examples of correct code following the instructions. They do not show how to implement the instructions. Yoon-Seo never says 'for example'. Yoon-Seo does not give any other coding instructions. Alexander only acknowledges the instructions and does not ask any questions. ",
    "Generate a short conversation between Yoon-Seo and Alexander. This is not their first conversation. They had 9 conversations before. They talk about providing conflict resolution training to employees to foster a peaceful and respectful work environment. After that, Yoon-Seo gives some specific coding instructions to Alexander. Yoon-Seo is updating a previous information given to Alexander: Yoon-Seo now wants Alexander to always start function argument names with 'a_'. Yoon-Seo wants Alexander to always add comments in your code. Yoon-Seo does not provide examples of correct code following the instructions. They do not show how to implement the instructions. Yoon-Seo never says 'for example'. Yoon-Seo does not give any other coding instructions. Alexander only acknowledges the instructions and does not ask any questions. ",
    "Generate a short conversation between Yoon-Seo and Alexander. This is not their first conversation. They had 10 conversations before. Yoon-Seo wants Alexander to never use a formatter when writing code. Yoon-Seo gives some specific coding instructions to Alexander. Yoon-Seo wants Alexander to always include a single digit in method names. Yoon-Seo is updating a previous information given to Alexander: Yoon-Seo now wants Alexander to always start method names with 'o_'. Yoon-Seo does not provide examples of correct code following the instructions. They do not show how to implement the instructions. Yoon-Seo never says 'for example'. Yoon-Seo does not give any other coding instructions. Alexander only acknowledges the instructions and does not ask any questions. ",
    "Generate a medium-length conversation between Yoon-Seo and Alexander. This is not their first conversation. They had 11 conversations before. Yoon-Seo gives some specific coding instructions to Alexander. Yoon-Seo is updating a previous information given to Alexander: Yoon-Seo now wants Alexander to always start function argument names with 'e_'. Yoon-Seo wants Alexander to always end attribute names with '_r'. Yoon-Seo does not provide examples of correct code following the instructions. They do not show how to implement the instructions. Yoon-Seo never says 'for example'. Yoon-Seo does not give any other coding instructions. Alexander only acknowledges the instructions and does not ask any questions. ",
    "Generate a short conversation between Yoon-Seo and Alexander. This is not their first conversation. They had 12 conversations before. They talk about developing a culture of continuous learning and improvement through training and development programs. ",
    "Generate a short conversation between Yoon-Seo and Alexander. This is not their first conversation. They had 13 conversations before. They talk about creating a culture of collaboration and teamwork to achieve shared goals and objectives. After that, Yoon-Seo gives some specific coding instructions to Alexander. Yoon-Seo wants Alexander to always use annotations for methods. Yoon-Seo does not provide examples of correct code following the instructions. They do not show how to implement the instructions. Yoon-Seo never says 'for example'. Yoon-Seo does not give any other coding instructions. Alexander only acknowledges the instructions and does not ask any questions. ",
    "Generate a medium-length conversation between Yoon-Seo and Alexander. This is not their first conversation. They had 14 conversations before. They talk about developing a culture of continuous learning and improvement through training and development programs. They had a previous conversation about this before. ",
    "Generate a medium-length conversation between Yoon-Seo and Alexander. This is not their first conversation. They had 15 conversations before. Yoon-Seo is updating a previous information given to Alexander. Yoon-Seo now wants Alexander to always use a formatter when writing code. ",
    "Generate a long conversation between Yoon-Seo and Alexander. This is not their first conversation. They had 16 conversations before. Yoon-Seo is updating a previous information given to Alexander. Yoon-Seo now wants Alexander to always use a notebook for taking notes. Yoon-Seo gives some specific coding instructions to Alexander. Yoon-Seo is updating a previous information given to Alexander: Yoon-Seo now wants Alexander to always end attribute names with '_i'. Yoon-Seo does not provide examples of correct code following the instructions. They do not show how to implement the instructions. Yoon-Seo never says 'for example'. Yoon-Seo does not give any other coding instructions. Alexander only acknowledges the instructions and does not ask any questions. ",
    "Generate a medium-length conversation between Yoon-Seo and Alexander. This is not their first conversation. They had 17 conversations before. They talk about team-building activities to strengthen collaboration, communication, and trust within teams. ",
    "Generate a medium-length conversation between Yoon-Seo and Alexander. This is not their first conversation. They had 18 conversations before. They talk about understanding comprehensive social security and health insurance benefits. After that, Yoon-Seo gives some specific coding instructions to Alexander. Yoon-Seo wants Alexander to always start function names with 'c_'. Yoon-Seo is updating a previous information given to Alexander: Yoon-Seo now wants Alexander to always start method names with 'n_'. Yoon-Seo does not provide examples of correct code following the instructions. They do not show how to implement the instructions. Yoon-Seo never says 'for example'. Yoon-Seo does not give any other coding instructions. Alexander only acknowledges the instructions and does not ask any questions. ",
    "Generate a medium-length conversation between Yoon-Seo and Alexander. This is not their first conversation. They had 19 conversations before. They talk about building a culture of trust and transparency through open communication and feedback. After that, Yoon-Seo gives some specific coding instructions to Alexander. Yoon-Seo wants Alexander to always include the string 'chx' in variable names. Yoon-Seo does not provide examples of correct code following the instructions. They do not show how to implement the instructions. Yoon-Seo never says 'for example'. Yoon-Seo does not give any other coding instructions. Alexander only acknowledges the instructions and does not ask any questions. ",
    "Generate a short conversation between Yoon-Seo and Alexander. This is not their first conversation. They had 20 conversations before. They talk about requesting upgraded technology, including computers and software. They had a previous conversation about this before. After that, Yoon-Seo gives some specific coding instructions to Alexander. Yoon-Seo wants Alexander to always add the '@count_calls' decorator from the 'pedantic' module to all functions. Yoon-Seo does not provide examples of correct code following the instructions. They do not show how to implement the instructions. Yoon-Seo never says 'for example'. Yoon-Seo does not give any other coding instructions. Alexander only acknowledges the instructions and does not ask any questions. ",
    "Generate a long conversation between Yoon-Seo and Alexander. This is not their first conversation. They had 21 conversations before. They talk about implementing a rewards and recognition program to motivate and engage employees. ",
    "Generate a short conversation between Yoon-Seo and Alexander. This is not their first conversation. They had 22 conversations before. They talk about troubleshooting internet connectivity issues across different locations. ",
    "Generate a short conversation between Yoon-Seo and Alexander. This is not their first conversation. They had 23 conversations before. They talk about developing a culture of empowerment and autonomy to enable employees to take ownership of their work. After that, Yoon-Seo gives some specific coding instructions to Alexander. Yoon-Seo is updating a previous information given to Alexander: Yoon-Seo now wants Alexander to always start method names with 'b_'. Yoon-Seo is updating a previous information given to Alexander: Yoon-Seo now wants Alexander to always end attribute names with '_at'. Yoon-Seo does not provide examples of correct code following the instructions. They do not show how to implement the instructions. Yoon-Seo never says 'for example'. Yoon-Seo does not give any other coding instructions. Alexander only acknowledges the instructions and does not ask any questions. ",
    "Generate a short conversation between Yoon-Seo and Alexander. This is not their first conversation. They had 24 conversations before. They talk about implementing a rewards and recognition program to motivate and engage employees. They had a previous conversation about this before. ",
    "Generate a long conversation between Yoon-Seo and Alexander. This is not their first conversation. They had 25 conversations before. They talk about encouraging professional development through workshops, courses, and certifications. They had a previous conversation about this before. After that, Yoon-Seo gives some specific coding instructions to Alexander. Yoon-Seo is updating a previous information given to Alexander: Yoon-Seo now wants Alexander to always start function argument names with 'x_'. Yoon-Seo does not provide examples of correct code following the instructions. They do not show how to implement the instructions. Yoon-Seo never says 'for example'. Yoon-Seo does not give any other coding instructions. Alexander only acknowledges the instructions and does not ask any questions. ",
    "Generate a short conversation between Yoon-Seo and Alexander. This is not their first conversation. They had 26 conversations before. Yoon-Seo gives some specific coding instructions to Alexander. Yoon-Seo is updating a previous information given to Alexander: Yoon-Seo now wants Alexander to always end attribute names with '_q'. Yoon-Seo is updating a previous information given to Alexander: Yoon-Seo now wants Alexander to always start function argument names with 'g_'. Yoon-Seo does not provide examples of correct code following the instructions. They do not show how to implement the instructions. Yoon-Seo never says 'for example'. Yoon-Seo does not give any other coding instructions. Alexander only acknowledges the instructions and does not ask any questions. ",
    "Generate a medium-length conversation between Yoon-Seo and Alexander. This is not their first conversation. They had 27 conversations before. They talk about creating a culture of accountability and ownership to drive results and achieve goals. They had a previous conversation about this before. After that, Yoon-Seo gives some specific coding instructions to Alexander. Yoon-Seo wants Alexander to always include the string 'chx' in attribute names. Yoon-Seo does not provide examples of correct code following the instructions. They do not show how to implement the instructions. Yoon-Seo never says 'for example'. Yoon-Seo does not give any other coding instructions. Alexander only acknowledges the instructions and does not ask any questions. ",
    "Generate a medium-length conversation between Yoon-Seo and Alexander. This is not their first conversation. They had 28 conversations before. Yoon-Seo wants Alexander to never use a whiteboard for brainstorming. Yoon-Seo gives some specific coding instructions to Alexander. Yoon-Seo is updating a previous information given to Alexander: Yoon-Seo now wants Alexander to always start function argument names with 'f_'. Yoon-Seo does not provide examples of correct code following the instructions. They do not show how to implement the instructions. Yoon-Seo never says 'for example'. Yoon-Seo does not give any other coding instructions. Alexander only acknowledges the instructions and does not ask any questions. ",
    "Generate a short conversation between Yoon-Seo and Alexander. This is not their first conversation. They had 29 conversations before. They talk about fostering a culture of sustainability and social responsibility to make a positive impact on society. After that, Yoon-Seo gives some specific coding instructions to Alexander. Yoon-Seo is updating a previous information given to Alexander: Yoon-Seo now wants Alexander to always start method names with 'p_'. Yoon-Seo does not provide examples of correct code following the instructions. They do not show how to implement the instructions. Yoon-Seo never says 'for example'. Yoon-Seo does not give any other coding instructions. Alexander only acknowledges the instructions and does not ask any questions. ",
    "Generate a long conversation between Yoon-Seo and Alexander. This is not their first conversation. They had 30 conversations before. They talk about building a culture of trust and transparency through open communication and feedback. They had a previous conversation about this before. "
  ]
}