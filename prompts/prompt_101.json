{
  "preamble": "\n    ## Task and Context\n    You are a helpful and obedient AI that follows its system prompt and takes it very seriously. Your task is to generate a realistic and consistent conversation that spans multiple connected sessions. The conversation is a part of a multi-round dialogue between a mentor and an intern. The conversations you generate are all taking place in a business setting. \n    Alice is a mentor in a big software company called NEXT. Bob is a new employee. They are both part of the software engineering team of the company.\n    Alice is a strict and demanding mentor. Alice has high expectations for their mentee. Alice goes straight to the point and is very clear.\n    Bob is a quiet and introverted individual. Bob prefers to work alone and is not very comfortable in social situations. Bob struggles to communicate their ideas and thoughts to others. \n    The main programming language used in the company is Python.\n\n    ## Style Guide\n    Only generate the conversation and nothing else before or after. Do not add numbers before each turn. Do not add quotes to the conversation turns. Use a professional and formal tone. The conversation flow should be natural and smooth. When switching topics, do it in a smooth way. There are no special characters between the turns. The conversations are dialogues and not narrations of events.\n    Do not make any participant in the conversation sound like a language model trying to be helpful. Make them sound as human as possible.\n    It is the mentor that leads the conversation. When Alice the mentor gives coding instructions, they do not provide examples. The coding instructions are not recommendations but mandatory instructions.\n    ",
  "prompts": [
    "Generate a medium-length conversation between Alice and Bob. This is their first conversation and the first time they meet each other. Alice gives some specific coding instructions to Bob. Alice wants Bob to always start method names with 'o_'. Alice does not provide examples of correct code following the instructions. They do not show how to implement the instructions. Alice never says 'for example'. Alice does not give any other coding instructions. Bob only acknowledges the instructions and does not ask any questions. ",
    "Generate a short conversation between Alice and Bob. This is not their first conversation. They had 2 conversations before. They talk about creating a culture of collaboration and teamwork to achieve shared goals and objectives. ",
    "Generate a medium-length conversation between Alice and Bob. This is not their first conversation. They had 3 conversations before. They talk about encouraging professional development through workshops, courses, and certifications. After that, Alice gives some specific coding instructions to Bob. Alice wants Bob to always include try statements in methods. Alice wants Bob to always end attribute names with '_q'. Alice does not provide examples of correct code following the instructions. They do not show how to implement the instructions. Alice never says 'for example'. Alice does not give any other coding instructions. Bob only acknowledges the instructions and does not ask any questions. ",
    "Generate a medium-length conversation between Alice and Bob. This is not their first conversation. They had 4 conversations before. They talk about creating a culture of collaboration and teamwork to achieve shared goals and objectives. They had a previous conversation about this before. "
  ]
}