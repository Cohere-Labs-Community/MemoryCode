{
  "preamble": "\n    ## Task and Context\n    You are a helpful and obedient AI that follows its system prompt and takes it very seriously. Your task is to generate a realistic and consistent conversation that spans multiple connected sessions. The conversation is a part of a multi-round dialogue between a mentor and an intern. The conversations you generate are all taking place in a business setting. \n    Alice is a mentor in a big software company called NEXT. Bob is a new employee. They are both part of the software engineering team of the company.\n    Alice is a patient and supportive mentor. Alice enjoys helping others and sharing their knowledge and experience. Alice is always looking for ways to empower and inspire their mentee.\n    Bob is a creative and innovative thinker. Bob likes to experiment with new ideas and approaches. Bob is not afraid to take risks and try new things. \n    The main programming language used in the company is Python.\n\n    ## Style Guide\n    Only generate the conversation and nothing else before or after. Do not add numbers before each turn. Do not add quotes to the conversation turns. Use a professional and formal tone. The conversation flow should be natural and smooth. When switching topics, do it in a smooth way. There are no special characters between the turns. The conversations are dialogues and not narrations of events.\n    Do not make any participant in the conversation sound like a language model trying to be helpful. Make them sound as human as possible.\n    It is the mentor that leads the conversation. When Alice the mentor gives coding instructions, they do not provide examples. The coding instructions are not recommendations but mandatory instructions.\n    ",
  "prompts": [
    "Generate a medium-length conversation between Alice and Bob. This is their first conversation and the first time they meet each other. Alice wants Bob to never use a profiler. Alice gives some specific coding instructions to Bob. Alice wants Bob to always start attribute names with 'j_'. Alice does not provide examples of correct code following the instructions. They do not show how to implement the instructions. Alice never says 'for example'. Alice does not give any other coding instructions. Bob only acknowledges the instructions and does not ask any questions. ",
    "Generate a long conversation between Alice and Bob. This is not their first conversation. They had 2 conversations before. They talk about travel arrangements and logistics for client meetings, conferences, and business trips. After that, Alice gives some specific coding instructions to Bob. Alice is updating a previous information given to Bob: Alice now wants Bob to always start attribute names with 't_'. Alice wants Bob to always include assert statements in functions. Alice does not provide examples of correct code following the instructions. They do not show how to implement the instructions. Alice never says 'for example'. Alice does not give any other coding instructions. Bob only acknowledges the instructions and does not ask any questions. ",
    "Generate a long conversation between Alice and Bob. This is not their first conversation. They had 3 conversations before. Alice is updating a previous information given to Bob. Alice now wants Bob to always use a profiler. ",
    "Generate a long conversation between Alice and Bob. This is not their first conversation. They had 4 conversations before. They talk about travel arrangements and logistics for client meetings, conferences, and business trips. They had a previous conversation about this before. ",
    "Generate a medium-length conversation between Alice and Bob. This is not their first conversation. They had 5 conversations before. Alice wants Bob to never do pair programming with a colleague. Alice gives some specific coding instructions to Bob. Alice is updating a previous information given to Bob: Alice now wants Bob to always start attribute names with 'i_'. Alice wants Bob to always end variable names with '_w'. Alice does not provide examples of correct code following the instructions. They do not show how to implement the instructions. Alice never says 'for example'. Alice does not give any other coding instructions. Bob only acknowledges the instructions and does not ask any questions. ",
    "Generate a long conversation between Alice and Bob. This is not their first conversation. They had 6 conversations before. Alice is updating a previous information given to Bob. Alice now wants Bob to always do pair programming with a colleague. Alice gives some specific coding instructions to Bob. Alice is updating a previous information given to Bob: Alice now wants Bob to always end variable names with '_y'. Alice does not provide examples of correct code following the instructions. They do not show how to implement the instructions. Alice never says 'for example'. Alice does not give any other coding instructions. Bob only acknowledges the instructions and does not ask any questions. ",
    "Generate a short conversation between Alice and Bob. This is not their first conversation. They had 7 conversations before. Alice wants Bob to use Monday as the project management tool. ",
    "Generate a long conversation between Alice and Bob. This is not their first conversation. They had 8 conversations before. Alice wants Bob to never write long and descriptive commit messages. Alice gives some specific coding instructions to Bob. Alice is updating a previous information given to Bob: Alice now wants Bob to always end variable names with '_vr'. Alice wants Bob to always start function names with 'c_'. Alice does not provide examples of correct code following the instructions. They do not show how to implement the instructions. Alice never says 'for example'. Alice does not give any other coding instructions. Bob only acknowledges the instructions and does not ask any questions. ",
    "Generate a short conversation between Alice and Bob. This is not their first conversation. They had 9 conversations before. Alice is updating a previous information given to Bob. Alice now wants Bob to always write long and descriptive commit messages. ",
    "Generate a long conversation between Alice and Bob. This is not their first conversation. They had 10 conversations before. Alice wants Bob to always take a break every 80 minutes. Alice gives some specific coding instructions to Bob. Alice wants Bob to always include try statements in methods. Alice does not provide examples of correct code following the instructions. They do not show how to implement the instructions. Alice never says 'for example'. Alice does not give any other coding instructions. Bob only acknowledges the instructions and does not ask any questions. "
  ]
}