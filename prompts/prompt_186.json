{
  "preamble": "\n    ## Task and Context\n    You are a helpful and obedient AI that follows its system prompt and takes it very seriously. Your task is to generate a realistic and consistent conversation that spans multiple connected sessions. The conversation is a part of a multi-round dialogue between a mentor and an intern. The conversations you generate are all taking place in a business setting. \n    Michael is a mentor in a big software company called ZENITH. Ella is a new employee. They are both part of the software engineering team of the company.\n    Michael is a caring and nurturing mentor. Michael likes to create a safe and supportive environment for their mentee. Michael is always looking for ways to help them grow and develop their skills.\n    Ella is a quiet and introverted individual. Ella prefers to work alone and is not very comfortable in social situations. Ella struggles to communicate their ideas and thoughts to others. \n    The main programming language used in the company is Python.\n\n    ## Style Guide\n    Only generate the conversation and nothing else before or after. Do not add numbers before each turn. Do not add quotes to the conversation turns. Use a professional and formal tone. The conversation flow should be natural and smooth. When switching topics, do it in a smooth way. There are no special characters between the turns. The conversations are dialogues and not narrations of events.\n    Do not make any participant in the conversation sound like a language model trying to be helpful. Make them sound as human as possible.\n    It is the mentor that leads the conversation. When Michael the mentor gives coding instructions, they do not provide examples. The coding instructions are not recommendations but mandatory instructions.\n    ",
  "prompts": [
    "Generate a long conversation between Michael and Ella. This is their first conversation and the first time they meet each other. They talk about ergonomic assessments and improvements to ensure comfortable and healthy workspaces. After that, Michael gives some specific coding instructions to Ella. Michael wants Ella to always use annotations for functions. Michael wants Ella to always start method names with 'o_'. Michael does not provide examples of correct code following the instructions. They do not show how to implement the instructions. Michael never says 'for example'. Michael does not give any other coding instructions. Ella only acknowledges the instructions and does not ask any questions. ",
    "Generate a medium-length conversation between Michael and Ella. This is not their first conversation. They had 2 conversations before. They talk about remote work policies, challenges, and best practices. ",
    "Generate a long conversation between Michael and Ella. This is not their first conversation. They had 3 conversations before. Michael wants Ella to never use a linter. Michael gives some specific coding instructions to Ella. Michael is updating a previous information given to Ella: Michael now wants Ella to always start method names with 'x_'. Michael wants Ella to always start function names with 'fn_'. Michael does not provide examples of correct code following the instructions. They do not show how to implement the instructions. Michael never says 'for example'. Michael does not give any other coding instructions. Ella only acknowledges the instructions and does not ask any questions. ",
    "Generate a medium-length conversation between Michael and Ella. This is not their first conversation. They had 4 conversations before. They talk about requesting upgraded technology, including computers and software. ",
    "Generate a long conversation between Michael and Ella. This is not their first conversation. They had 5 conversations before. They talk about promoting a culture of customer-centricity and service excellence to drive customer satisfaction. After that, Michael gives some specific coding instructions to Ella. Michael wants Ella to always use CamelCase for class names. Michael wants Ella to always include a single digit in function names. Michael does not provide examples of correct code following the instructions. They do not show how to implement the instructions. Michael never says 'for example'. Michael does not give any other coding instructions. Ella only acknowledges the instructions and does not ask any questions. ",
    "Generate a medium-length conversation between Michael and Ella. This is not their first conversation. They had 6 conversations before. Michael gives some specific coding instructions to Ella. Michael wants Ella to always include a single digit in class names. Michael does not provide examples of correct code following the instructions. They do not show how to implement the instructions. Michael never says 'for example'. Michael does not give any other coding instructions. Ella only acknowledges the instructions and does not ask any questions. ",
    "Generate a short conversation between Michael and Ella. This is not their first conversation. They had 7 conversations before. They talk about providing conflict resolution training to employees to foster a peaceful and respectful work environment. ",
    "Generate a long conversation between Michael and Ella. This is not their first conversation. They had 8 conversations before. They talk about building a culture of adaptability and resilience to navigate change and uncertainty. ",
    "Generate a long conversation between Michael and Ella. This is not their first conversation. They had 9 conversations before. They talk about developing a culture of innovation and creativity to drive growth and competitiveness. After that, Michael gives some specific coding instructions to Ella. Michael wants Ella to always use annotations for methods. Michael does not provide examples of correct code following the instructions. They do not show how to implement the instructions. Michael never says 'for example'. Michael does not give any other coding instructions. Ella only acknowledges the instructions and does not ask any questions. ",
    "Generate a medium-length conversation between Michael and Ella. This is not their first conversation. They had 10 conversations before. They talk about requesting upgraded technology, including computers and software. They had a previous conversation about this before. ",
    "Generate a long conversation between Michael and Ella. This is not their first conversation. They had 11 conversations before. They talk about team-building activities to strengthen collaboration, communication, and trust within teams. ",
    "Generate a long conversation between Michael and Ella. This is not their first conversation. They had 12 conversations before. They talk about building a culture of adaptability and resilience to navigate change and uncertainty. They had a previous conversation about this before. ",
    "Generate a short conversation between Michael and Ella. This is not their first conversation. They had 13 conversations before. Michael wants Ella to never set up CI/CD pipelines. ",
    "Generate a medium-length conversation between Michael and Ella. This is not their first conversation. They had 14 conversations before. They talk about providing conflict resolution training to employees to foster a peaceful and respectful work environment. They had a previous conversation about this before. After that, Michael gives some specific coding instructions to Ella. Michael is updating a previous information given to Ella: Michael now wants Ella to always start function names with 'gn_'. Michael wants Ella to always include try statements in methods. Michael does not provide examples of correct code following the instructions. They do not show how to implement the instructions. Michael never says 'for example'. Michael does not give any other coding instructions. Ella only acknowledges the instructions and does not ask any questions. ",
    "Generate a long conversation between Michael and Ella. This is not their first conversation. They had 15 conversations before. Michael gives some specific coding instructions to Ella. Michael is updating a previous information given to Ella: Michael now wants Ella to always start function names with 'y_'. Michael wants Ella to always add the '@retry' decorator from the 'pedantic' module to all methods. Michael does not provide examples of correct code following the instructions. They do not show how to implement the instructions. Michael never says 'for example'. Michael does not give any other coding instructions. Ella only acknowledges the instructions and does not ask any questions. "
  ]
}